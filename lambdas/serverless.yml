org: danny1robinson
app: socket-auction
service: auction-lambdas
frameworkVersion: "3"

# https://github.com/liberocks/medium-websocket-serverless
# ^ this looks like a cleaner option.

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-2
  timeout: 10
  iam:
    role: ${ssm:/lambda/role/socket}
  vpc:
    securityGroupIds:
      - ${ssm:/lambda/sg/AWS_SG}
    subnetIds:
      - ${ssm:/lambda/subnet/VPC_SUBNET1}
      - ${ssm:/lambda/subnet/VPC_SUBNET2}
      - ${ssm:/lambda/subnet/VPC_SUBNET3}
      - ${ssm:/lambda/subnet/VPC_SUBNET4}
# note: at one point I was getting a "can't prefix ssm... error"
# so I installed this plugin. It might not be necessary. could have been the ~true
# trying both methods now to check
# https://github.com/serverless/serverless/issues/10968
plugins:
  - serverless-ssm-fetch
custom:
  serverlessSsmFetch:
    REDIS_CLUSTER_ENDPOINT: /elasticache/redis/REDIS_CLUSTER_ENDPOINT
functions:
  api:
    handler: index.handler
    events:
      - httpApi:
          path: /
          method: get
  # See https://serverless.com/framework/docs/providers/aws/events/websocket/
  connect:
    handler: functions/connect.handler
    events:
      - websocket:
          route: $connect
  default:
    handler: functions/default.handler
    events:
      - websocket:
          route: $default
  disconnect:
    handler: functions/disconnect.handler
    events:
      - websocket:
          route: $disconnect
